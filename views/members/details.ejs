<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>
        <%= title %>
    </title>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            margin: 0;
            padding: 20px;
            min-height: 100vh;
        }

        .container {
            max-width: 900px;
            margin: 0 auto;
            background: white;
            border-radius: 20px;
            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.1);
            padding: 40px;
        }

        .header {
            text-align: center;
            margin-bottom: 40px;
            padding-bottom: 20px;
            border-bottom: 2px solid #f0f0f0;
        }

        .header h1 {
            color: #333;
            margin: 0 0 10px 0;
            font-size: 2.2em;
        }

        .header p {
            color: #666;
            margin: 0;
            font-size: 1.1em;
        }

        .member-profile {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 30px;
            margin-bottom: 40px;
        }

        @media (max-width: 768px) {
            .member-profile {
                grid-template-columns: 1fr;
                gap: 20px;
            }
        }

        .profile-card {
            background: #f8f9fa;
            padding: 25px;
            border-radius: 15px;
            border-left: 5px solid #667eea;
        }

        .profile-card h3 {
            margin: 0 0 20px 0;
            color: #333;
            font-size: 1.3em;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .info-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 12px 0;
            border-bottom: 1px solid #dee2e6;
        }

        .info-item:last-child {
            border-bottom: none;
        }

        .info-label {
            font-weight: 600;
            color: #666;
            flex: 1;
        }

        .info-value {
            color: #333;
            font-weight: 500;
            flex: 2;
            text-align: right;
        }

        .role-badge {
            display: inline-block;
            padding: 6px 16px;
            border-radius: 25px;
            font-size: 0.85em;
            font-weight: 700;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .role-badge.admin {
            background: #e74c3c;
            color: white;
        }

        .role-badge.member {
            background: #3498db;
            color: white;
        }

        .status-badge {
            display: inline-block;
            padding: 6px 16px;
            border-radius: 25px;
            font-size: 0.85em;
            font-weight: 700;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .status-badge.active {
            background: #27ae60;
            color: white;
        }

        .status-badge.inactive {
            background: #95a5a6;
            color: white;
        }

        .activity-section {
            margin-bottom: 40px;
        }

        .section-title {
            color: #333;
            margin: 0 0 25px 0;
            font-size: 1.4em;
            font-weight: 600;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .activity-stats {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .stat-card {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 25px;
            border-radius: 15px;
            text-align: center;
        }

        .stat-value {
            font-size: 2.5em;
            font-weight: 700;
            margin-bottom: 5px;
        }

        .stat-label {
            font-size: 0.9em;
            opacity: 0.9;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .recent-activity {
            background: #f8f9fa;
            padding: 25px;
            border-radius: 15px;
            min-height: 150px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: #666;
            font-style: italic;
        }

        .actions {
            display: flex;
            gap: 15px;
            justify-content: center;
            flex-wrap: wrap;
            margin-bottom: 30px;
        }

        .btn {
            padding: 12px 24px;
            border: none;
            border-radius: 8px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 8px;
            transition: all 0.3s ease;
        }

        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
        }

        .btn-primary {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
        }

        .btn-secondary {
            background: #6c757d;
            color: white;
        }

        .btn-danger {
            background: #dc3545;
            color: white;
        }

        .back-link {
            text-align: center;
            margin-top: 30px;
        }

        .back-link a {
            color: #667eea;
            text-decoration: none;
            font-weight: 600;
            font-size: 1.1em;
        }

        .back-link a:hover {
            text-decoration: underline;
        }

        .alert {
            padding: 15px 20px;
            border-radius: 8px;
            margin-bottom: 25px;
            font-weight: 500;
        }

        .alert-success {
            background-color: #d4edda;
            color: #155724;
            border: 1px solid #c3e6cb;
        }

        .alert-error {
            background-color: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
        }
    </style>
</head>

<body>
    <div class="container">
        <div class="header">
            <h1>👤 Member Details</h1>
            <p>Complete member profile and activity overview</p>
        </div>

        <% if (message) { %>
            <div class="alert alert-success">
                <%= message %>
            </div>
            <% } %>

                <% if (error) { %>
                    <div class="alert alert-error">
                        <%= error %>
                    </div>
                    <% } %>

                        <div class="member-profile">
                            <div class="profile-card">
                                <h3>📋 Basic Information</h3>
                                <div class="info-item">
                                    <span class="info-label">Member ID:</span>
                                    <span class="info-value">#<%= member.MemberID %></span>
                                </div>
                                <div class="info-item">
                                    <span class="info-label">Full Name:</span>
                                    <span class="info-value">
                                        <%= member.Name %>
                                    </span>
                                </div>
                                <div class="info-item">
                                    <span class="info-label">Email:</span>
                                    <span class="info-value">
                                        <%= member.Email %>
                                    </span>
                                </div>
                                <div class="info-item">
                                    <span class="info-label">Account Role:</span>
                                    <span class="info-value">
                                        <span class="role-badge <%= member.Role %>">
                                            <%= member.Role %>
                                        </span>
                                    </span>
                                </div>
                                <div class="info-item">
                                    <span class="info-label">Status:</span>
                                    <span class="info-value">
                                        <span class="status-badge active">Active</span>
                                    </span>
                                </div>
                            </div>

                            <div class="profile-card">
                                <h3>📅 Account Timeline</h3>
                                <div class="info-item">
                                    <span class="info-label">Member Since:</span>
                                    <span class="info-value">
                                        <%= new Date(member.CreatedAt).toLocaleDateString('en-US', { year: 'numeric' ,
                                            month: 'long' , day: 'numeric' }) %>
                                    </span>
                                </div>
                                <div class="info-item">
                                    <span class="info-label">Last Updated:</span>
                                    <span class="info-value">
                                        <%= new Date(member.UpdatedAt).toLocaleDateString('en-US', { year: 'numeric' ,
                                            month: 'long' , day: 'numeric' }) %>
                                    </span>
                                </div>
                                <div class="info-item">
                                    <span class="info-label">Days Active:</span>
                                    <span class="info-value">
                                        <%= Math.floor((new Date() - new Date(member.CreatedAt)) / (1000 * 60 * 60 *
                                            24)) %> days
                                    </span>
                                </div>
                                <div class="info-item">
                                    <span class="info-label">Last Login:</span>
                                    <span class="info-value">
                                        <% if (member.LastLoginAt) { %>
                                            <%= new Date(member.LastLoginAt).toLocaleDateString('en-US', {
                                                year: 'numeric' , month: 'short' , day: 'numeric' }) %>
                                                <% } else { %>
                                                    Never logged in
                                                    <% } %>
                                    </span>
                                </div>
                            </div>
                        </div>

                        <div class="activity-section">
                            <h2 class="section-title">📊 Activity Overview</h2>

                            <div class="activity-stats">
                                <div class="stat-card">
                                    <div class="stat-value">0</div>
                                    <div class="stat-label">Books Borrowed</div>
                                </div>
                                <div class="stat-card">
                                    <div class="stat-value">0</div>
                                    <div class="stat-label">Currently Borrowed</div>
                                </div>
                                <div class="stat-card">
                                    <div class="stat-value">0</div>
                                    <div class="stat-label">Books Returned</div>
                                </div>
                                <div class="stat-card">
                                    <div class="stat-value">0</div>
                                    <div class="stat-label">Overdue Items</div>
                                </div>
                            </div>

                            <div class="recent-activity">
                                📚 Recent borrowing activity will be displayed here once the borrowing system is
                                implemented.
                            </div>
                        </div>

                        <div class="actions">
                            <a href="/members/edit/<%= member.MemberID %>" class="btn btn-primary">
                                ✏️ Edit Member
                            </a>
                            <button class="btn btn-danger" data-member-id="<%= member.MemberID %>"
                                data-member-name="<%= member.Name %>">
                                🗑️ Delete Member
                            </button>
                            <a href="/members" class="btn btn-secondary">
                                📋 Back to List
                            </a>
                        </div>

                        <div class="back-link">
                            <a href="/members">← Back to Member Management</a>
                        </div>
    </div>

    <script>
        // Handle delete confirmation
        document.addEventListener('DOMContentLoaded', function () {
            const deleteButtons = document.querySelectorAll('.btn-danger[data-member-id]');

            deleteButtons.forEach(button => {
                button.addEventListener('click', function () {
                    const memberId = this.getAttribute('data-member-id');
                    const memberName = this.getAttribute('data-member-name');

                    const confirmMessage = `Are you sure you want to delete member "${memberName}"?\n\nThis action cannot be undone and will permanently remove:\n• Member account and profile\n• All borrowing history\n• Any associated records\n\nType "DELETE" to confirm:`;

                    const userInput = prompt(confirmMessage);
                    if (userInput === 'DELETE') {
                        // Create and submit delete form
                        const form = document.createElement('form');
                        form.method = 'POST';
                        form.action = `/members/delete/${memberId}`;
                        form.style.display = 'none';
                        document.body.appendChild(form);
                        form.submit();
                    }
                });
            });
        });
    </script>
</body>

</html>