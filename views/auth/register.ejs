<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>
        <%= title || 'Register - Library Management System' %>
    </title>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            margin: 0;
            padding: 0;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .register-container {
            background: white;
            padding: 40px;
            border-radius: 10px;
            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.1);
            width: 100%;
            max-width: 450px;
            margin: 20px;
        }

        .register-header {
            text-align: center;
            margin-bottom: 30px;
        }

        .register-header h1 {
            color: #333;
            margin: 0 0 10px 0;
            font-size: 2em;
        }

        .register-header p {
            color: #666;
            margin: 0;
            font-size: 1.1em;
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-label {
            display: block;
            margin-bottom: 8px;
            font-weight: 600;
            color: #333;
            font-size: 14px;
        }

        .form-input {
            width: 100%;
            padding: 12px 16px;
            border: 2px solid #e1e5e9;
            border-radius: 6px;
            font-size: 16px;
            transition: border-color 0.3s, box-shadow 0.3s;
            box-sizing: border-box;
        }

        .form-input:focus {
            outline: none;
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }

        .form-input:invalid {
            border-color: #e74c3c;
        }

        .password-requirements {
            font-size: 12px;
            color: #666;
            margin-top: 5px;
        }

        .password-requirements ul {
            margin: 5px 0 0 0;
            padding-left: 20px;
        }

        .password-requirements li {
            margin: 2px 0;
            transition: color 0.3s;
        }

        .password-requirements li.valid {
            color: #2f855a;
            font-weight: 500;
        }

        .password-requirements li.invalid {
            color: #e53e3e;
        }

        .password-strength {
            margin-top: 8px;
        }

        .strength-bar {
            height: 4px;
            background: #e1e5e9;
            border-radius: 2px;
            margin-bottom: 4px;
            position: relative;
            overflow: hidden;
        }

        .strength-bar::after {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            height: 100%;
            width: 0%;
            transition: width 0.3s, background-color 0.3s;
            border-radius: 2px;
        }

        .strength-bar.weak::after {
            width: 25%;
            background: #e53e3e;
        }

        .strength-bar.fair::after {
            width: 50%;
            background: #dd6b20;
        }

        .strength-bar.good::after {
            width: 75%;
            background: #38a169;
        }

        .strength-bar.strong::after {
            width: 100%;
            background: #2f855a;
        }

        .strength-text {
            font-size: 11px;
            color: #666;
        }

        .password-match {
            font-size: 12px;
            margin-top: 5px;
            min-height: 16px;
        }

        .password-match.valid {
            color: #2f855a;
        }

        .password-match.invalid {
            color: #e53e3e;
        }

        .form-input.valid-input {
            border-color: #2f855a;
        }

        .form-input.invalid-input {
            border-color: #e53e3e;
        }

        .btn-register {
            width: 100%;
            padding: 14px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border: none;
            border-radius: 6px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: transform 0.2s, box-shadow 0.2s;
            margin-bottom: 20px;
        }

        .btn-register:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(102, 126, 234, 0.4);
        }

        .btn-register:active {
            transform: translateY(0);
        }

        .alert {
            padding: 12px 16px;
            border-radius: 6px;
            margin-bottom: 20px;
            font-size: 14px;
        }

        .alert-error {
            background: #fee;
            color: #c53030;
            border: 1px solid #fed7d7;
        }

        .alert-success {
            background: #f0fff4;
            color: #2f855a;
            border: 1px solid #c6f6d5;
        }

        .links {
            text-align: center;
            margin-top: 20px;
        }

        .links a {
            color: #667eea;
            text-decoration: none;
            font-weight: 500;
        }

        .links a:hover {
            text-decoration: underline;
        }

        .divider {
            text-align: center;
            margin: 20px 0;
            color: #999;
            position: relative;
        }

        .divider::before {
            content: '';
            position: absolute;
            top: 50%;
            left: 0;
            right: 0;
            height: 1px;
            background: #e1e5e9;
            z-index: 1;
        }

        .divider span {
            background: white;
            padding: 0 15px;
            position: relative;
            z-index: 2;
        }

        .member-benefits {
            background: #f8f9fa;
            padding: 15px;
            border-radius: 6px;
            margin-bottom: 20px;
            font-size: 14px;
            color: #666;
        }

        .member-benefits h4 {
            margin: 0 0 10px 0;
            color: #333;
            font-size: 14px;
        }

        .member-benefits ul {
            margin: 0;
            padding-left: 20px;
        }

        .member-benefits ul li {
            margin: 5px 0;
        }

        @media (max-width: 480px) {
            .register-container {
                padding: 30px 20px;
                margin: 10px;
            }

            .register-header h1 {
                font-size: 1.6em;
            }
        }
    </style>
</head>

<body>
    <div class="register-container">
        <div class="register-header">
            <h1>üìö Join Library</h1>
            <p>Create your member account</p>
        </div>

        <% if (error) { %>
            <div class="alert alert-error">
                ‚ö†Ô∏è <%= error %>
            </div>
            <% } %>

                <% if (message) { %>
                    <div class="alert alert-success">
                        ‚úÖ <%= message %>
                    </div>
                    <% } %>

                        <form method="POST" action="/register" id="registerForm">
                            <div class="form-group">
                                <label for="name" class="form-label">Full Name</label>
                                <input type="text" id="name" name="name" class="form-input"
                                    placeholder="Enter your full name" required>
                            </div>

                            <div class="form-group">
                                <label for="email" class="form-label">Email Address</label>
                                <input type="email" id="email" name="email" class="form-input"
                                    placeholder="Enter your email address" required>
                            </div>

                            <div class="form-group">
                                <label for="password" class="form-label">Password</label>
                                <input type="password" id="password" name="password" class="form-input"
                                    placeholder="Create a password" required minlength="8">
                                <div class="password-requirements" id="passwordRequirements">
                                    Password must contain:
                                    <ul>
                                        <li id="lengthReq">At least 8 characters</li>
                                        <li id="upperReq">One uppercase letter (A-Z)</li>
                                        <li id="lowerReq">One lowercase letter (a-z)</li>
                                        <li id="numberReq">One number (0-9)</li>
                                        <li id="specialReq">One special character (!@#$%^&*)</li>
                                    </ul>
                                </div>
                                <div class="password-strength" id="passwordStrength">
                                    <div class="strength-bar" id="strengthBar"></div>
                                    <span class="strength-text" id="strengthText">Password strength</span>
                                </div>
                            </div>

                            <div class="form-group">
                                <label for="confirmPassword" class="form-label">Confirm Password</label>
                                <input type="password" id="confirmPassword" name="confirmPassword" class="form-input"
                                    placeholder="Confirm your password" required minlength="8">
                                <div class="password-match" id="passwordMatch"></div>
                            </div>

                            <button type="submit" class="btn-register">
                                ‚ú® Create Account
                            </button>
                        </form>

                        <div class="member-benefits">
                            <h4>üéØ Member Benefits:</h4>
                            <ul>
                                <li>Browse our complete book catalog</li>
                                <li>Borrow up to 3 books at a time</li>
                                <li>Track your borrowed books and due dates</li>
                                <li>Simple one-click book returns</li>
                                <li>Clean, easy-to-use member interface</li>
                            </ul>
                        </div>

                        <div class="divider">
                            <span>or</span>
                        </div>

                        <div class="links">
                            <p>Already have an account? <a href="/login">Sign in here</a></p>
                            <p><a href="/">‚Üê Back to Home</a></p>
                        </div>
    </div>

    <script>
        // Auto-focus on name field
        document.addEventListener('DOMContentLoaded', function () {
            document.getElementById('name').focus();
        });

        // Enhanced email validation
        function validateEmail(email) {
            const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
            return emailRegex.test(email);
        }

        // Password validation functions
        function checkPasswordRequirements(password) {
            const requirements = {
                length: password.length >= 8,
                upper: /[A-Z]/.test(password),
                lower: /[a-z]/.test(password),
                number: /[0-9]/.test(password),
                special: /[!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]/.test(password)
            };

            // Update visual indicators
            document.getElementById('lengthReq').className = requirements.length ? 'valid' : 'invalid';
            document.getElementById('upperReq').className = requirements.upper ? 'valid' : 'invalid';
            document.getElementById('lowerReq').className = requirements.lower ? 'valid' : 'invalid';
            document.getElementById('numberReq').className = requirements.number ? 'valid' : 'invalid';
            document.getElementById('specialReq').className = requirements.special ? 'valid' : 'invalid';

            return requirements;
        }

        function calculatePasswordStrength(password) {
            const requirements = checkPasswordRequirements(password);
            const validCount = Object.values(requirements).filter(valid => valid).length;

            const strengthBar = document.getElementById('strengthBar');
            const strengthText = document.getElementById('strengthText');

            strengthBar.className = 'strength-bar';

            if (validCount === 0) {
                strengthText.textContent = 'Password strength';
            } else if (validCount <= 2) {
                strengthBar.classList.add('weak');
                strengthText.textContent = 'Weak password';
            } else if (validCount <= 3) {
                strengthBar.classList.add('fair');
                strengthText.textContent = 'Fair password';
            } else if (validCount <= 4) {
                strengthBar.classList.add('good');
                strengthText.textContent = 'Good password';
            } else {
                strengthBar.classList.add('strong');
                strengthText.textContent = 'Strong password';
            }

            return validCount === 5;
        }

        // Real-time email validation
        document.getElementById('email').addEventListener('input', function () {
            const email = this.value.trim();

            if (email && !validateEmail(email)) {
                this.classList.add('invalid-input');
                this.classList.remove('valid-input');
            } else if (email) {
                this.classList.add('valid-input');
                this.classList.remove('invalid-input');
            } else {
                this.classList.remove('valid-input', 'invalid-input');
            }
        });

        // Real-time password validation
        document.getElementById('password').addEventListener('input', function () {
            const password = this.value;
            const isValid = calculatePasswordStrength(password);

            if (password && !isValid) {
                this.classList.add('invalid-input');
                this.classList.remove('valid-input');
            } else if (password && isValid) {
                this.classList.add('valid-input');
                this.classList.remove('invalid-input');
            } else {
                this.classList.remove('valid-input', 'invalid-input');
            }

            // Also check confirm password if it has a value
            const confirmPassword = document.getElementById('confirmPassword').value;
            if (confirmPassword) {
                validatePasswordMatch(password, confirmPassword);
            }
        });

        // Real-time password confirmation validation
        function validatePasswordMatch(password, confirmPassword) {
            const matchDiv = document.getElementById('passwordMatch');
            const confirmInput = document.getElementById('confirmPassword');

            if (!confirmPassword) {
                matchDiv.textContent = '';
                matchDiv.className = 'password-match';
                confirmInput.classList.remove('valid-input', 'invalid-input');
                return false;
            }

            if (password === confirmPassword) {
                matchDiv.textContent = '‚úì Passwords match';
                matchDiv.className = 'password-match valid';
                confirmInput.classList.add('valid-input');
                confirmInput.classList.remove('invalid-input');
                return true;
            } else {
                matchDiv.textContent = '‚úó Passwords do not match';
                matchDiv.className = 'password-match invalid';
                confirmInput.classList.add('invalid-input');
                confirmInput.classList.remove('valid-input');
                return false;
            }
        }

        document.getElementById('confirmPassword').addEventListener('input', function () {
            const password = document.getElementById('password').value;
            const confirmPassword = this.value;
            validatePasswordMatch(password, confirmPassword);
        });

        // Enhanced form validation
        document.getElementById('registerForm').addEventListener('submit', function (e) {
            const name = document.getElementById('name').value.trim();
            const email = document.getElementById('email').value.trim();
            const password = document.getElementById('password').value;
            const confirmPassword = document.getElementById('confirmPassword').value;

            // Validate all fields are filled
            if (!name || !email || !password || !confirmPassword) {
                e.preventDefault();
                alert('Please fill in all fields');
                return;
            }

            // Validate name (at least 2 characters, letters and spaces only)
            if (name.length < 2 || !/^[a-zA-Z\s]+$/.test(name)) {
                e.preventDefault();
                alert('Please enter a valid name (at least 2 characters, letters and spaces only)');
                return;
            }

            // Validate email format
            if (!validateEmail(email)) {
                e.preventDefault();
                alert('Please enter a valid email address');
                return;
            }

            // Validate password requirements
            const passwordRequirements = checkPasswordRequirements(password);
            const allRequirementsMet = Object.values(passwordRequirements).every(req => req);

            if (!allRequirementsMet) {
                e.preventDefault();
                alert('Password must meet all requirements (8+ characters, uppercase, lowercase, number, special character)');
                return;
            }

            // Validate passwords match
            if (password !== confirmPassword) {
                e.preventDefault();
                alert('Passwords do not match');
                return;
            }

            // Show loading state
            const submitBtn = document.querySelector('.btn-register');
            submitBtn.textContent = 'üîÑ Creating Account...';
            submitBtn.disabled = true;
        });
    </script>
</body>

</html>